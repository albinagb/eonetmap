[{"/Users/alba/Documents/GitHub/pricemap/src/index.js":"1","/Users/alba/Documents/GitHub/pricemap/src/MainMap.js":"2","/Users/alba/Documents/GitHub/pricemap/src/Filters.js":"3","/Users/alba/Documents/GitHub/pricemap/src/MarkerCluster.js":"4","/Users/alba/Documents/GitHub/pricemap/src/constants.js":"5","/Users/alba/Documents/GitHub/pricemap/src/RedMarker.js":"6"},{"size":400,"mtime":1616454888480,"results":"7","hashOfConfig":"8"},{"size":2009,"mtime":1616460784038,"results":"9","hashOfConfig":"8"},{"size":5423,"mtime":1616445418448,"results":"10","hashOfConfig":"8"},{"size":1169,"mtime":1616030753966,"results":"11","hashOfConfig":"8"},{"size":216,"mtime":1616030753968,"results":"12","hashOfConfig":"8"},{"size":356,"mtime":1616032436274,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"lfxnk3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/alba/Documents/GitHub/pricemap/src/index.js",[],["28","29"],"/Users/alba/Documents/GitHub/pricemap/src/MainMap.js",[],"/Users/alba/Documents/GitHub/pricemap/src/Filters.js",["30","31","32"],"import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport { customMarker } from \"./constants\";\nimport { RedMarker } from \"./RedMarker\";\nimport { Form } from \"semantic-ui-react\";\n\nconst WEEKS = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function Filters({ data, PriceData, setMarkers }) {\n  const [bedrooms, setBedrooms] = useState(\"All\");\n  const [status, setStatus] = useState(\"All\");\n  const [price, setPrice] = useState([275000, 425000]);\n  const [mls, setMls] = useState(\"\");\n  const [weeks, setWeeks] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n\n  const rangeSelector = (e, newValue) => {\n    setPrice(newValue);\n    // console.log(`Value 1: ${newValue[0]} ---  Value 2: ${newValue[1]}`)\n  };\n\n  // Object keys\n\n  //  let propertyDataKeys = (Object.keys(data[0]).map(el => {\n  //     console.log(el)\n  //   }));\n\n  data = data.filter(\n    (item) => item.Price >= price[0] && item.Price <= price[1]\n  );\n\n  if (mls !== \"\") {\n    data = data.filter((el) => el.MlsNumber == mls);\n  }\n\n  if (weeks !== \"Over\") {\n    data = data.filter((item) => item.weeks_on_market >= weeks);\n  }\n\n  if (bedrooms !== \"All\") {\n    data = data.filter((item) => item.Bedrooms == bedrooms);\n  }\n\n  if (status !== \"All\") {\n    data = data.filter((item) => item.status === status);\n  }\n\n  if (checked) {\n    data = data.filter((el) => el.weeks_on_market == 0);\n  }\n\n  let dataClean = [];\n\n  data.forEach((element) => {\n    if (element.status === \"Available\") {\n      dataClean.push({\n        position: { lng: element.Longitude, lat: element.Latitude },\n        text: PriceData(element),\n        style: customMarker,\n      });\n    } else if (element.status === \"Removed\") {\n      dataClean.push({\n        position: { lng: element.Longitude, lat: element.Latitude },\n        text: PriceData(element),\n        style: RedMarker,\n      });\n    }\n  });\n\n  // Submit Function\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setMarkers(dataClean);\n  };\n\n  return (\n    <>\n      <Form className=\"greenForm \" onSubmit={handleSubmit}>\n        <div className=\"ui grid\">\n          <div className=\"two column row\">\n            <div className=\"left floated column\">\n              <h2>Filters</h2>\n            </div>\n            <div className=\"right floated column right aligned\">\n              <i aria-hidden=\"true\" className=\"close link icon\"></i>\n            </div>\n          </div>\n\n          <div className=\"two column row\">\n            <label className=\"left floated column\" htmlFor=\"bedrooms\">\n              Bedrooms\n              <select\n                className=\"\"\n                id=\"bedrooms\"\n                value={bedrooms}\n                onChange={(event) => setBedrooms(event.target.value)}\n              >\n                <option>All</option>\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n              </select>\n            </label>\n\n            <label className=\"right floated column\" htmlFor=\"status\">\n              Status\n              <select\n                className=\"ui dropdown item\"\n                id=\"status\"\n                value={status}\n                onChange={(event) => setStatus(event.target.value)}\n              >\n                <option>All</option>\n                <option>Available</option>\n                <option>Removed</option>\n              </select>\n            </label>\n          </div>\n\n          <div className=\"three column row\">\n            <label className=\"six wide column\" htmlFor=\"mls\">\n              {\" \"}\n              Search by MLS\n              <input\n                className=\"\"\n                id=\"mls\"\n                value={mls}\n                placeholder=\"MLS\"\n                onChange={(e) => setMls(e.target.value)}\n              />\n            </label>\n\n            <label className=\"six wide column\" htmlFor=\"weeks\">\n              Weeks\n              <select\n                className=\"\"\n                id=\"weeks\"\n                value={weeks}\n                onChange={(e) => setWeeks(e.target.value)}\n                onBlur={(e) => setWeeks(e.target.value)}\n              >\n                <option>Over</option>\n                {WEEKS.map((weeks) => (\n                  <option key={weeks} value={weeks}>\n                    {weeks}\n                  </option>\n                ))}\n              </select>\n            </label>\n\n            <label className=\"four wide column\">\n              New:\n              <input\n                className=\"ui checkbox\"\n                id=\"\"\n                type=\"checkbox\"\n                value=\"{checked}\"\n                onChange={() => setChecked((checked) => !checked)}\n              />\n            </label>\n          </div>\n        </div>\n\n        <div className=\"sliderBox\">\n          <div>\n            <Typography id=\"range-slider\" gutterBottom>\n              Select Price Range:\n            </Typography>\n            <Slider\n              value={price}\n              min={0}\n              step={25000}\n              max={600000}\n              onChange={rangeSelector}\n              valueLabelDisplay=\"auto\"\n            />\n            Price is between {price[0]} and {price[1]}\n          </div>\n        </div>\n\n        <input className=\"ui button\" type=\"submit\" value=\"Submit\" />\n      </Form>\n    </>\n  );\n}\n","/Users/alba/Documents/GitHub/pricemap/src/MarkerCluster.js",[],"/Users/alba/Documents/GitHub/pricemap/src/constants.js",[],"/Users/alba/Documents/GitHub/pricemap/src/RedMarker.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":35,"column":45,"nodeType":"39","messageId":"40","endLine":35,"endColumn":47},{"ruleId":"37","severity":1,"message":"38","line":43,"column":48,"nodeType":"39","messageId":"40","endLine":43,"endColumn":50},{"ruleId":"37","severity":1,"message":"38","line":51,"column":51,"nodeType":"39","messageId":"40","endLine":51,"endColumn":53},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]