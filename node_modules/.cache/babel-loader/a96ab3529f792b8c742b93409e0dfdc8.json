{"ast":null,"code":"var _jsxFileName = \"/Users/alba/Documents/GitHub/pricemap/src/MainMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport MarkerCluster from \"./MarkerCluster\";\nimport data from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst position = [45.503, -73.595];\nconst mapStyle = {\n  height: \"90vh\"\n};\nlet dataClean = []; // new data\n\nlet dataNewClean = [];\ndata.forEach(element => {\n  dataNewClean.push({\n    position: {\n      lng: element.Longitude,\n      lat: element.Latitude\n    },\n    text: element.Bedrooms\n  });\n}); //\n\ndata.forEach(element => {\n  dataClean.push({\n    position: {\n      lng: element.Longitude,\n      lat: element.Latitude\n    },\n    text: PriceData(element)\n  });\n}); // Price Data Log function - new\n\nfunction PriceData(element) {\n  let labelText = `No.: ${element.MlsNumber}, ${element.Bedrooms} rooms</br>\n  ${element.ListingAddress}</br></br>`;\n  const data = element.history;\n  data[0].forEach((element, indx) => {\n    labelText = `${labelText} ∙ ${element}: ${data[1][indx]} </br>`;\n  });\n  labelText = `${labelText}</br>${element.days_on_market} days on market</br>status: ${element.status}`;\n  return labelText;\n}\n\n_c = PriceData;\n\nconst MainMap = () => {\n  _s();\n\n  // approach 1: pre-filter dataClean here, then re-render map\n  const [checked, setChecked] = useState(false);\n  dataClean = [];\n\n  if (checked) {\n    data.forEach(element => {\n      if (element.Bedrooms === 2) {\n        dataClean.push({\n          position: {\n            lng: element.Longitude,\n            lat: element.Latitude\n          },\n          text: PriceData(element)\n        });\n      }\n    });\n  } else {\n    data.forEach(element => {\n      dataClean.push({\n        position: {\n          lng: element.Longitude,\n          lat: element.Latitude\n        },\n        text: PriceData(element)\n      });\n    });\n  }\n\n  console.log(checked);\n  console.log(dataClean.length);\n  const [markers, setMarkers] = useState(dataClean);\n  console.log(markers.length); // approach 2: post-filter markers here, then ?\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"2 Bedrooms:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: \"{checked}\",\n          onChange: () => setChecked(checked => !checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: checked ? \"checked\" : \"not checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMarkers(dataNewClean),\n        children: \"New With Bedrooms PopUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      center: position,\n      zoom: 2,\n      style: mapStyle,\n      maxZoom: 18,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MarkerCluster, {\n        markers: markers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainMap, \"KxjKr8tsTd7jfvyTnB78kcv4OSs=\");\n\n_c2 = MainMap;\nexport default MainMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PriceData\");\n$RefreshReg$(_c2, \"MainMap\");","map":{"version":3,"sources":["/Users/alba/Documents/GitHub/pricemap/src/MainMap.js"],"names":["React","useState","Map","TileLayer","MarkerCluster","data","position","mapStyle","height","dataClean","dataNewClean","forEach","element","push","lng","Longitude","lat","Latitude","text","Bedrooms","PriceData","labelText","MlsNumber","ListingAddress","history","indx","days_on_market","status","MainMap","checked","setChecked","console","log","length","markers","setMarkers"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport MarkerCluster from \"./MarkerCluster\";\nimport data from \"./data\";\n\nconst position = [45.503, -73.595];\nconst mapStyle = { height: \"90vh\" };\n\nlet dataClean = [];\n\n// new data\n\nlet dataNewClean = [];\n\ndata.forEach((element) => {\n  dataNewClean.push({\n    position: { lng: element.Longitude, lat: element.Latitude },\n    text: element.Bedrooms,\n  });\n});\n\n//\n\ndata.forEach((element) => {\n  dataClean.push({\n    position: { lng: element.Longitude, lat: element.Latitude },\n    text: PriceData(element),\n  });\n});\n\n// Price Data Log function - new\n\nfunction PriceData(element) {\n  let labelText = `No.: ${element.MlsNumber}, ${element.Bedrooms} rooms</br>\n  ${element.ListingAddress}</br></br>`;\n  const data = element.history;\n  data[0].forEach((element, indx) => {\n    labelText = `${labelText} ∙ ${element}: ${data[1][indx]} </br>`;\n  });\n\n  labelText = `${labelText}</br>${element.days_on_market} days on market</br>status: ${element.status}`;\n\n  return labelText;\n}\n\nconst MainMap = () => {\n  // approach 1: pre-filter dataClean here, then re-render map\n\n  const [checked, setChecked] = useState(false);\n\n  dataClean = [];\n\n  if (checked) {\n    data.forEach((element) => {\n      if (element.Bedrooms === 2) {\n        dataClean.push({\n          position: { lng: element.Longitude, lat: element.Latitude },\n          text: PriceData(element),\n        });\n      }\n    });\n  } else {\n    data.forEach((element) => {\n      dataClean.push({\n        position: { lng: element.Longitude, lat: element.Latitude },\n        text: PriceData(element),\n      });\n    });\n  }\n\n  console.log(checked);\n  console.log(dataClean.length);\n\n  const [markers, setMarkers] = useState(dataClean);\n\n  console.log(markers.length);\n  // approach 2: post-filter markers here, then ?\n\n  return (\n    <>\n      <form>\n        <label>\n          2 Bedrooms:\n          <input\n            type=\"checkbox\"\n            value=\"{checked}\"\n            onChange={() => setChecked((checked) => !checked)}\n          />\n        </label>\n        <p>{checked ? \"checked\" : \"not checked\"}</p>\n        <button onClick={() => setMarkers(dataNewClean)}>\n          New With Bedrooms PopUp\n        </button>\n      </form>\n      <Map center={position} zoom={2} style={mapStyle} maxZoom={18}>\n        <TileLayer\n          url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <MarkerCluster markers={markers} />\n      </Map>\n    </>\n  );\n};\n\nexport default MainMap;\n"]},"metadata":{},"sourceType":"module"}