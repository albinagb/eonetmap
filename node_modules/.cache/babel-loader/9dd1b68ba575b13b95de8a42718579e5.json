{"ast":null,"code":"var _jsxFileName = \"/Users/alba/Documents/GitHub/pricemap/src/Filters.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchParams = ({\n  data\n}) => {\n  _s();\n\n  const [location, setLocation] = useState(\"Montreal\");\n  const [status, setStatus] = useState(\"Available\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-params\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"location\",\n        children: [\"location\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"location\",\n          value: location,\n          placeholder: location,\n          onChange: event => setLocation(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: [\"Status\", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"status\",\n          value: status,\n          onChange: event => setStatus(event.target.value),\n          onBloor: event => setStatus(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), data.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status,\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchParams, \"67AYw7r3Ez0p/FfuPs2u3o1ER48=\");\n\n_c = SearchParams;\nexport default function Filters({\n  data,\n  dataClean,\n  PriceData,\n  setMarkers\n}) {\n  _s2();\n\n  const [checked, setChecked] = useState(false);\n  const [selected, setSelected] = useState(\"Available\");\n  dataClean = [];\n\n  if (checked) {\n    data.forEach(element => {\n      if (element.Bedrooms === 2) {\n        dataClean.push({\n          position: {\n            lng: element.Longitude,\n            lat: element.Latitude\n          },\n          text: PriceData(element)\n        });\n      }\n    });\n  } else {\n    console.log(`not checked ${dataClean.length}`);\n    data.forEach(element => {\n      dataClean.push({\n        position: {\n          lng: element.Longitude,\n          lat: element.Latitude\n        },\n        text: PriceData(element)\n      });\n    });\n  } // Submit Function\n\n\n  console.log(`global ${dataClean.length}`);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setMarkers(dataClean);\n    console.log(`2 handleSubmit ${dataClean.length}`);\n  }; // Check the status of properties\n\n\n  function handleChange(e) {\n    setSelected(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchParams, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"2 bedrooms:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: \"{checked}\",\n          onChange: () => setChecked(checked => !checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"allpropt\",\n            children: \"All Properties\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"avlpropt\",\n            children: \"Available Properties\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"removedpropt\",\n            children: \"Removed Properties\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Filters, \"qSGo1bhkjy4hRT4koxyhI6G5yHg=\");\n\n_c2 = Filters;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchParams\");\n$RefreshReg$(_c2, \"Filters\");","map":{"version":3,"sources":["/Users/alba/Documents/GitHub/pricemap/src/Filters.js"],"names":["React","useState","SearchParams","data","location","setLocation","status","setStatus","event","target","value","map","Filters","dataClean","PriceData","setMarkers","checked","setChecked","selected","setSelected","forEach","element","Bedrooms","push","position","lng","Longitude","lat","Latitude","text","console","log","length","handleSubmit","preventDefault","handleChange","e"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,UAAD,CAAxC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,WAAD,CAApC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,4CAEE;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,KAAK,EAAEG,QAFT;AAGE,UAAA,WAAW,EAAEA,QAHf;AAIE,UAAA,QAAQ,EAAGI,KAAD,IAAWH,WAAW,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd;AAJlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA,0CAEE;AACE,UAAA,EAAE,EAAC,QADL;AAEE,UAAA,KAAK,EAAEJ,MAFT;AAGE,UAAA,QAAQ,EAAGE,KAAD,IAAWD,SAAS,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHhC;AAIE,UAAA,OAAO,EAAGF,KAAD,IAAWD,SAAS,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJ/B;AAAA,kCAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAOGP,IAAI,CAACQ,GAAL,CAAUL,MAAD,iBACR;AAAQ,YAAA,KAAK,EAAEA,MAAf;AAAA,sBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAlCD;;GAAMJ,Y;;KAAAA,Y;AAoCN,eAAe,SAASU,OAAT,CAAiB;AAAET,EAAAA,IAAF;AAAQU,EAAAA,SAAR;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA;AAA9B,CAAjB,EAA6D;AAAA;;AAC1E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,WAAD,CAAxC;AAEAY,EAAAA,SAAS,GAAG,EAAZ;;AAEA,MAAIG,OAAJ,EAAa;AACXb,IAAAA,IAAI,CAACiB,OAAL,CAAcC,OAAD,IAAa;AACxB,UAAIA,OAAO,CAACC,QAAR,KAAqB,CAAzB,EAA4B;AAC1BT,QAAAA,SAAS,CAACU,IAAV,CAAe;AACbC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,GAAG,EAAEJ,OAAO,CAACK,SAAf;AAA0BC,YAAAA,GAAG,EAAEN,OAAO,CAACO;AAAvC,WADG;AAEbC,UAAAA,IAAI,EAAEf,SAAS,CAACO,OAAD;AAFF,SAAf;AAID;AACF,KAPD;AAQD,GATD,MASO;AACLS,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAclB,SAAS,CAACmB,MAAO,EAA5C;AACA7B,IAAAA,IAAI,CAACiB,OAAL,CAAcC,OAAD,IAAa;AACxBR,MAAAA,SAAS,CAACU,IAAV,CAAe;AACbC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAG,EAAEJ,OAAO,CAACK,SAAf;AAA0BC,UAAAA,GAAG,EAAEN,OAAO,CAACO;AAAvC,SADG;AAEbC,QAAAA,IAAI,EAAEf,SAAS,CAACO,OAAD;AAFF,OAAf;AAID,KALD;AAMD,GAvByE,CAyB1E;;;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAa,UAASlB,SAAS,CAACmB,MAAO,EAAvC;;AAEA,QAAMC,YAAY,GAAIzB,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAAC0B,cAAN;AACAnB,IAAAA,UAAU,CAACF,SAAD,CAAV;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBlB,SAAS,CAACmB,MAAO,EAA/C;AACD,GAJD,CA7B0E,CAmC1E;;;AAEA,WAASG,YAAT,CAAsBC,CAAtB,EAAyB;AACvBjB,IAAAA,WAAW,CAACiB,CAAC,CAAC3B,MAAF,CAASC,KAAV,CAAX;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEuB,YAAhB;AAAA,8BACE;AAAA,+CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAC,WAFR;AAGE,UAAA,QAAQ,EAAE,MAAMhB,UAAU,CAAED,OAAD,IAAa,CAACA,OAAf;AAH5B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,+BACE;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAkBE;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,KAAK,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAyBD;;IAlEuBJ,O;;MAAAA,O","sourcesContent":["import React, { useState } from \"react\";\n\nconst SearchParams = ({ data }) => {\n  const [location, setLocation] = useState(\"Montreal\");\n  const [status, setStatus] = useState(\"Available\");\n\n  return (\n    <div className=\"search-params\">\n      <form>\n        <label htmlFor=\"location\">\n          location\n          <input\n            id=\"location\"\n            value={location}\n            placeholder={location}\n            onChange={(event) => setLocation(event.target.value)}\n          />\n        </label>\n        <label htmlFor=\"status\">\n          Status\n          <select\n            id=\"status\"\n            value={status}\n            onChange={(event) => setStatus(event.target.value)}\n            onBloor={(event) => setStatus(event.target.value)}\n          >\n            <option>All</option>\n            {data.map((status) => (\n              <option value={status}>{status}</option>\n            ))}\n          </select>\n        </label>\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default function Filters({ data, dataClean, PriceData, setMarkers }) {\n  const [checked, setChecked] = useState(false);\n  const [selected, setSelected] = useState(\"Available\");\n\n  dataClean = [];\n\n  if (checked) {\n    data.forEach((element) => {\n      if (element.Bedrooms === 2) {\n        dataClean.push({\n          position: { lng: element.Longitude, lat: element.Latitude },\n          text: PriceData(element),\n        });\n      }\n    });\n  } else {\n    console.log(`not checked ${dataClean.length}`);\n    data.forEach((element) => {\n      dataClean.push({\n        position: { lng: element.Longitude, lat: element.Latitude },\n        text: PriceData(element),\n      });\n    });\n  }\n\n  // Submit Function\n\n  console.log(`global ${dataClean.length}`);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setMarkers(dataClean);\n    console.log(`2 handleSubmit ${dataClean.length}`);\n  };\n\n  // Check the status of properties\n\n  function handleChange(e) {\n    setSelected(e.target.value);\n  }\n\n  return (\n    <>\n      <SearchParams />\n      <form onSubmit={handleSubmit}>\n        <label>\n          2 bedrooms:\n          <input\n            type=\"checkbox\"\n            value=\"{checked}\"\n            onChange={() => setChecked((checked) => !checked)}\n          />\n        </label>\n\n        <label>\n          <select>\n            <option value=\"allpropt\">All Properties</option>\n            <option value=\"avlpropt\">Available Properties</option>\n            <option value=\"removedpropt\">Removed Properties</option>\n          </select>\n        </label>\n\n        <input className=\"button\" type=\"submit\" value=\"Submit\" />\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}