{"ast":null,"code":"var _jsxFileName = \"/Users/alba/Documents/GitHub/pricemap/src/MainMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport Filters from \"./Filters\";\nimport MarkerCluster from \"./MarkerCluster\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst position = [45.503, -73.595];\nconst mapStyle = {\n  height: \"90vh\"\n};\n\nfunction NewDataArray(data) {\n  let dataClean = [];\n  data.forEach(element => {\n    dataClean.push({\n      position: {\n        lng: element.Longitude,\n        lat: element.Latitude\n      },\n      text: PriceData(element)\n    });\n  });\n  return dataClean;\n}\n\n_c = NewDataArray;\n\nfunction PriceData(element) {\n  let labelText = `No.: ${element.MlsNumber}, ${element.Bedrooms} rooms, ${element.Parking} parking space.</br>\n  ${element.ListingAddress}</br></br>`;\n  const data = element.history;\n  data[0].forEach((element, indx) => {\n    labelText = `${labelText} ∙ ${element}: ${data[1][indx]} </br>`;\n  });\n  labelText = `${labelText}</br>${element.weeks_on_market} weeks on market</br>status: ${element.status}`;\n  return labelText;\n}\n\n_c2 = PriceData;\n\nconst MainMap = ({\n  data = []\n}) => {\n  _s();\n\n  let dataClean = NewDataArray(data);\n  const [markers, setMarkers] = useState(dataClean);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      data: data,\n      setMarkers: setMarkers,\n      PriceData: PriceData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      id: \"map\",\n      center: position,\n      zoom: 2,\n      style: mapStyle,\n      maxZoom: 18,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MarkerCluster, {\n        markers: markers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainMap, \"ip/rF1zjii90QUHmBIweDYKRZ3w=\");\n\n_c3 = MainMap;\nexport default MainMap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NewDataArray\");\n$RefreshReg$(_c2, \"PriceData\");\n$RefreshReg$(_c3, \"MainMap\");","map":{"version":3,"sources":["/Users/alba/Documents/GitHub/pricemap/src/MainMap.js"],"names":["React","useState","Map","TileLayer","Filters","MarkerCluster","position","mapStyle","height","NewDataArray","data","dataClean","forEach","element","push","lng","Longitude","lat","Latitude","text","PriceData","labelText","MlsNumber","Bedrooms","Parking","ListingAddress","history","indx","weeks_on_market","status","MainMap","markers","setMarkers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC,MAAD,EAAS,CAAC,MAAV,CAAjB;AACA,MAAMC,QAAQ,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAjB;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MAAIC,SAAS,GAAG,EAAhB;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAcC,OAAD,IAAa;AACxBF,IAAAA,SAAS,CAACG,IAAV,CAAe;AACbR,MAAAA,QAAQ,EAAE;AAAES,QAAAA,GAAG,EAAEF,OAAO,CAACG,SAAf;AAA0BC,QAAAA,GAAG,EAAEJ,OAAO,CAACK;AAAvC,OADG;AAEbC,MAAAA,IAAI,EAAEC,SAAS,CAACP,OAAD;AAFF,KAAf;AAID,GALD;AAMA,SAAOF,SAAP;AACD;;KATQF,Y;;AAWT,SAASW,SAAT,CAAmBP,OAAnB,EAA4B;AAC1B,MAAIQ,SAAS,GAAI,QAAOR,OAAO,CAACS,SAAU,KAAIT,OAAO,CAACU,QAAS,WAAUV,OAAO,CAACW,OAAQ;AAC3F,IAAIX,OAAO,CAACY,cAAe,YADzB;AAEA,QAAMf,IAAI,GAAGG,OAAO,CAACa,OAArB;AACAhB,EAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQE,OAAR,CAAgB,CAACC,OAAD,EAAUc,IAAV,KAAmB;AACjCN,IAAAA,SAAS,GAAI,GAAEA,SAAU,MAAKR,OAAQ,KAAIH,IAAI,CAAC,CAAD,CAAJ,CAAQiB,IAAR,CAAc,QAAxD;AACD,GAFD;AAIAN,EAAAA,SAAS,GAAI,GAAEA,SAAU,QAAOR,OAAO,CAACe,eAAgB,gCAA+Bf,OAAO,CAACgB,MAAO,EAAtG;AAEA,SAAOR,SAAP;AACD;;MAXQD,S;;AAaT,MAAMU,OAAO,GAAG,CAAC;AAAEpB,EAAAA,IAAI,GAAG;AAAT,CAAD,KAAmB;AAAA;;AACjC,MAAIC,SAAS,GAAGF,YAAY,CAACC,IAAD,CAA5B;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAACU,SAAD,CAAtC;AACA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAED,IAAf;AAAqB,MAAA,UAAU,EAAEsB,UAAjC;AAA6C,MAAA,SAAS,EAAEZ;AAAxD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,MAAM,EAAEd,QAAtB;AAAgC,MAAA,IAAI,EAAE,CAAtC;AAAyC,MAAA,KAAK,EAAEC,QAAhD;AAA0D,MAAA,OAAO,EAAE,EAAnE;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,GAAG,EAAC,yCADN;AAEE,QAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEwB;AAAxB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAcD,CAjBD;;GAAMD,O;;MAAAA,O;AAmBN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport Filters from \"./Filters\";\nimport MarkerCluster from \"./MarkerCluster\";\n\nconst position = [45.503, -73.595];\nconst mapStyle = { height: \"90vh\" };\n\nfunction NewDataArray(data) {\n  let dataClean = [];\n  data.forEach((element) => {\n    dataClean.push({\n      position: { lng: element.Longitude, lat: element.Latitude },\n      text: PriceData(element),\n    });\n  });\n  return dataClean;\n}\n\nfunction PriceData(element) {\n  let labelText = `No.: ${element.MlsNumber}, ${element.Bedrooms} rooms, ${element.Parking} parking space.</br>\n  ${element.ListingAddress}</br></br>`;\n  const data = element.history;\n  data[0].forEach((element, indx) => {\n    labelText = `${labelText} ∙ ${element}: ${data[1][indx]} </br>`;\n  });\n\n  labelText = `${labelText}</br>${element.weeks_on_market} weeks on market</br>status: ${element.status}`;\n\n  return labelText;\n}\n\nconst MainMap = ({ data = [] }) => {\n  let dataClean = NewDataArray(data);\n  const [markers, setMarkers] = useState(dataClean);\n  return (\n    <>\n      <Filters data={data} setMarkers={setMarkers} PriceData={PriceData} />\n     \n      <Map id=\"map\" center={position} zoom={2} style={mapStyle} maxZoom={18}>\n        <TileLayer\n          url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <MarkerCluster markers={markers} />\n      </Map>\n      \n    </>\n  );\n};\n\nexport default MainMap;\n"]},"metadata":{},"sourceType":"module"}