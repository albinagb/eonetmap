{"ast":null,"code":"var _jsxFileName = \"/Users/alba/Documents/GitHub/pricemap/src/MainMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport Filters from \"./Filters\";\nimport MarkerCluster from \"./MarkerCluster\";\nimport { customMarker } from \"./constants\";\nimport { RedMarker } from \"./RedMarker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst position = [45.503, -73.595];\nconst mapStyle = {\n  height: \"100vh\"\n};\n\nfunction NewDataArray(data) {\n  const draggable = setState(false);\n  let dataClean = [];\n  data.forEach(element => {\n    if (element.status === \"Available\") {\n      dataClean.push({\n        position: {\n          lng: element.Longitude,\n          lat: element.Latitude\n        },\n        text: PriceData(element),\n        style: customMarker\n      });\n    } else if (element.status === \"Removed\") {\n      dataClean.push({\n        position: {\n          lng: element.Longitude,\n          lat: element.Latitude\n        },\n        text: PriceData(element),\n        style: RedMarker\n      });\n    }\n  });\n  return dataClean;\n}\n\n_c = NewDataArray;\n\nfunction PriceData(element) {\n  let labelText = `No.: ${element.MlsNumber}, ${element.Bedrooms} rooms, ${element.Parking} parking</br>\n  ${element.ListingAddress}</br></br>`;\n  const data = element.history;\n  data[0].forEach((element, indx) => {\n    labelText = `${labelText} ∙ ${element}: ${data[1][indx]} </br>`;\n  });\n  labelText = `${labelText}</br>${element.weeks_on_market} weeks on market</br>status as of ${element.updated}: ${element.status}`;\n  return labelText;\n}\n\n_c2 = PriceData;\n\nconst MainMap = ({\n  data = []\n}) => {\n  _s();\n\n  let dataClean = NewDataArray(data);\n  const [markers, setMarkers] = useState(dataClean);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      center: position,\n      zoom: 2,\n      style: mapStyle,\n      maxZoom: 18,\n      children: [/*#__PURE__*/_jsxDEV(Filters, {\n        draggable: draggable,\n        data: data,\n        setMarkers: setMarkers,\n        PriceData: PriceData,\n        markers: markers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        className: \"test\",\n        url: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MarkerCluster, {\n        markers: markers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MainMap, \"ip/rF1zjii90QUHmBIweDYKRZ3w=\");\n\n_c3 = MainMap;\nexport default MainMap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NewDataArray\");\n$RefreshReg$(_c2, \"PriceData\");\n$RefreshReg$(_c3, \"MainMap\");","map":{"version":3,"sources":["/Users/alba/Documents/GitHub/pricemap/src/MainMap.js"],"names":["React","useState","Map","TileLayer","Filters","MarkerCluster","customMarker","RedMarker","position","mapStyle","height","NewDataArray","data","draggable","setState","dataClean","forEach","element","status","push","lng","Longitude","lat","Latitude","text","PriceData","style","labelText","MlsNumber","Bedrooms","Parking","ListingAddress","history","indx","weeks_on_market","updated","MainMap","markers","setMarkers"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport Filters from \"./Filters\";\nimport MarkerCluster from \"./MarkerCluster\";\n\nimport { customMarker } from \"./constants\";\nimport { RedMarker } from \"./RedMarker\";\n\nconst position = [45.503, -73.595];\nconst mapStyle = { height: \"100vh\" };\n\nfunction NewDataArray(data) {\n  const draggable = setState(false);\n\n  let dataClean = [];\n  data.forEach((element) => {\n    if (element.status === \"Available\") {\n      dataClean.push({\n        position: { lng: element.Longitude, lat: element.Latitude },\n        text: PriceData(element),\n        style: customMarker,\n      });\n    } else if (element.status === \"Removed\") {\n      dataClean.push({\n        position: { lng: element.Longitude, lat: element.Latitude },\n        text: PriceData(element),\n        style: RedMarker,\n      });\n    }\n  });\n  return dataClean;\n}\n\nfunction PriceData(element) {\n  let labelText = `No.: ${element.MlsNumber}, ${element.Bedrooms} rooms, ${element.Parking} parking</br>\n  ${element.ListingAddress}</br></br>`;\n  const data = element.history;\n  data[0].forEach((element, indx) => {\n    labelText = `${labelText} ∙ ${element}: ${data[1][indx]} </br>`;\n  });\n\n  labelText = `${labelText}</br>${element.weeks_on_market} weeks on market</br>status as of ${element.updated}: ${element.status}`;\n\n  return labelText;\n}\n\nconst MainMap = ({ data = [] }) => {\n  let dataClean = NewDataArray(data);\n  const [markers, setMarkers] = useState(dataClean);\n  return (\n    <>\n      <Map center={position} zoom={2} style={mapStyle} maxZoom={18}>\n        <Filters\n          draggable={draggable}\n          data={data}\n          setMarkers={setMarkers}\n          PriceData={PriceData}\n          markers={markers}\n        />\n        <TileLayer\n          className=\"test\"\n          url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <MarkerCluster markers={markers} />\n      </Map>\n    </>\n  );\n};\n\nexport default MainMap;\n"]},"metadata":{},"sourceType":"module"}