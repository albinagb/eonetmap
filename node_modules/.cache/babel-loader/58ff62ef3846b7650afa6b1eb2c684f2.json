{"ast":null,"code":"var _jsxFileName = \"/Users/alba/Documents/GitHub/pricemap/src/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Filters({\n  data,\n  dataClean,\n  PriceData,\n  setMarkers\n}) {\n  _s();\n\n  const [bedrooms, setBedrooms] = useState(\"All\");\n  const [status, setStatus] = useState(\"All\"); // applyFilter(data) {\n  //     let result = data\n  //   if (postcode) {\n  //       result = result.filter(item => item.postcode.toLowerCase().startsWith(postcode))\n  //     }\n  //     return result\n  //   }\n\n  if (bedrooms !== \"All\") {\n    dataClean = [];\n    data.forEach(element => {\n      if (element.Bedrooms == bedrooms) {\n        dataClean.push({\n          position: {\n            lng: element.Longitude,\n            lat: element.Latitude\n          },\n          text: PriceData(element)\n        });\n      }\n    });\n  }\n\n  if (status !== \"All\") {\n    dataClean = [];\n    data.forEach(element => {\n      if (element.status === status) {\n        dataClean.push({\n          position: {\n            lng: element.Longitude,\n            lat: element.Latitude\n          },\n          text: PriceData(element)\n        });\n      }\n    });\n  } // Submit Function\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setMarkers(dataClean);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bedrooms\",\n        children: [\"Bedrooms\", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"bedrooms\",\n          value: bedrooms,\n          onChange: event => setBedrooms(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: [\"Status\", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"status\",\n          value: status,\n          onChange: event => setStatus(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Removed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Filters, \"ELTcOIpvlEjce9kIUVvE3+H8P5w=\");\n\n_c = Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/Users/alba/Documents/GitHub/pricemap/src/Filters.js"],"names":["React","useState","Filters","data","dataClean","PriceData","setMarkers","bedrooms","setBedrooms","status","setStatus","forEach","element","Bedrooms","push","position","lng","Longitude","lat","Latitude","text","handleSubmit","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Filters({ data, dataClean, PriceData, setMarkers }) {\n  const [bedrooms, setBedrooms] = useState(\"All\");\n  const [status, setStatus] = useState(\"All\");\n\n  // applyFilter(data) {\n  //     let result = data\n  //   if (postcode) {\n  //       result = result.filter(item => item.postcode.toLowerCase().startsWith(postcode))\n  //     }\n  //     return result\n  //   }\n\n  if (bedrooms !== \"All\") {\n    dataClean = [];\n    data.forEach((element) => {\n      if (element.Bedrooms == bedrooms) {\n        dataClean.push({\n          position: { lng: element.Longitude, lat: element.Latitude },\n          text: PriceData(element),\n        });\n      }\n    });\n  }\n\n  if (status !== \"All\") {\n    dataClean = [];\n    data.forEach((element) => {\n      if (element.status === status) {\n        dataClean.push({\n          position: { lng: element.Longitude, lat: element.Latitude },\n          text: PriceData(element),\n        });\n      }\n    });\n  }\n\n  // Submit Function\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setMarkers(dataClean);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"bedrooms\">\n          Bedrooms\n          <select\n            id=\"bedrooms\"\n            value={bedrooms}\n            onChange={(event) => setBedrooms(event.target.value)}\n          >\n            <option>All</option>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"status\">\n          Status\n          <select\n            id=\"status\"\n            value={status}\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option>All</option>\n            <option>Available</option>\n            <option>Removed</option>\n          </select>\n        </label>\n\n        <input className=\"button\" type=\"submit\" value=\"Submit\" />\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}