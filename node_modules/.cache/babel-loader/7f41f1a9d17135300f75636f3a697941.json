{"ast":null,"code":"var _jsxFileName = \"/Users/alba/Documents/GitHub/pricemap/src/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport InputRange from \"react-input-range\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Filters({\n  data,\n  PriceData,\n  setMarkers\n}) {\n  _s();\n\n  const [bedrooms, setBedrooms] = useState(\"All\");\n  const [status, setStatus] = useState(\"All\");\n  const [price, setPrice] = useState({\n    min: 300,\n    max: 420\n  });\n\n  if (bedrooms !== \"All\") {\n    data = data.filter(item => item.Bedrooms == bedrooms);\n  }\n\n  if (status !== \"All\") {\n    data = data.filter(item => item.status === status); // console.log(`data status: ${data.length}`);\n  }\n\n  let dataClean = [];\n  data.forEach(element => {\n    dataClean.push({\n      position: {\n        lng: element.Longitude,\n        lat: element.Latitude\n      },\n      text: PriceData(element)\n    });\n  }); // Submit Function\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setMarkers(dataClean);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bedrooms\",\n        children: [\"Bedrooms\", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"bedrooms\",\n          value: bedrooms,\n          onChange: event => setBedrooms(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: [\"Status\", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"status\",\n          value: status,\n          onChange: event => setStatus(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Removed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: /*#__PURE__*/_jsxDEV(InputRange, {\n          maxValue: 700,\n          minValue: 0,\n          value: price,\n          onChange: event => setPrice(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Filters, \"Abd7pXwDqkrqF4Y3Lfy3bcS1PJ4=\");\n\n_c = Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/Users/alba/Documents/GitHub/pricemap/src/Filters.js"],"names":["React","useState","InputRange","Filters","data","PriceData","setMarkers","bedrooms","setBedrooms","status","setStatus","price","setPrice","min","max","filter","item","Bedrooms","dataClean","forEach","element","push","position","lng","Longitude","lat","Latitude","text","handleSubmit","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport InputRange from \"react-input-range\";\n\nexport default function Filters({ data, PriceData, setMarkers }) {\n  const [bedrooms, setBedrooms] = useState(\"All\");\n  const [status, setStatus] = useState(\"All\");\n  const [price, setPrice] = useState({ min: 300, max: 420 });\n\n  if (bedrooms !== \"All\") {\n    data = data.filter((item) => item.Bedrooms == bedrooms);\n  }\n\n  if (status !== \"All\") {\n    data = data.filter((item) => item.status === status);\n    // console.log(`data status: ${data.length}`);\n  }\n\n  let dataClean = [];\n  data.forEach((element) => {\n    dataClean.push({\n      position: { lng: element.Longitude, lat: element.Latitude },\n      text: PriceData(element),\n    });\n  });\n\n  // Submit Function\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setMarkers(dataClean);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"bedrooms\">\n          Bedrooms\n          <select\n            id=\"bedrooms\"\n            value={bedrooms}\n            onChange={(event) => setBedrooms(event.target.value)}\n          >\n            <option>All</option>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"status\">\n          Status\n          <select\n            id=\"status\"\n            value={status}\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option>All</option>\n            <option>Available</option>\n            <option>Removed</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"price\">\n          <InputRange\n            maxValue={700}\n            minValue={0}\n            value={price}\n            onChange={(event) => setPrice(event.target.value)}\n          />\n        </label>\n\n        <input className=\"button\" type=\"submit\" value=\"Submit\" />\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}