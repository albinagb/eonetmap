{"ast":null,"code":"var _jsxFileName = \"/Users/alba/Desktop/re-maps/src/Leaflet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport MarkerCluster from \"./MarkerCluster\";\nimport data from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconsole.log(data);\nconst position = [45.503, -73.595];\nconst mapStyle = {\n  height: \"90vh\"\n};\nlet dataClean = [];\ndata.venues.forEach(element => {\n  dataClean.push({\n    position: {\n      lng: element.lng,\n      lat: element.lat\n    },\n    text: element.ListingAddress\n  });\n});\n\nconst Leaflet = () => {\n  _s();\n\n  const [markers, setMarkers] = useState(dataClean // [\n  // data.venues.forEach(element => );\n  //   {\n  //   console.log(element);\n  // position: { lng: element.lng, lat: element.lat },\n  // text: element.ListingAddress,\n  //   }\n  // {\n  //   position: { lng: data.venues[0].lng, lat: data.venues[0].lat },\n  //   text: data.venues[0].ListingAddress,\n  // },\n  // {\n  //   position: { lng: data.venues[1].lng, lat: data.venues[1].lat },\n  //   text: data.venues[1].ListingAddress,\n  // },\n  // {\n  //   position: { lng: data.venues[2].lng, lat: data.venues[2].lat },\n  //   text: data.venues[2].ListingAddress,\n  // },\n  // {\n  //   position: { lng: data.venues[3].lng, lat: data.venues[3].lat },\n  //   text: data.venues[3].ListingAddress,\n  // },\n  //   ]\n  );\n\n  const handleClick = () => {\n    setMarkers([{\n      position: {\n        lng: data.venues[0].lng,\n        lat: data.venues[0].lat\n      },\n      text: data.venues[0].ListingAddress\n    }, {\n      position: {\n        lng: data.venues[1].lng,\n        lat: data.venues[1].lat\n      },\n      text: data.venues[1].ListingAddress\n    }, {\n      position: {\n        lng: data.venues[2].lng,\n        lat: data.venues[2].lat\n      },\n      text: data.venues[2].ListingAddress\n    }, {\n      position: {\n        lng: data.venues[3].lng,\n        lat: data.venues[3].lat\n      },\n      text: data.venues[3].ListingAddress\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      center: position,\n      zoom: 2,\n      style: mapStyle,\n      maxZoom: 20,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MarkerCluster, {\n        markers: markers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Change cluster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Leaflet, \"ip/rF1zjii90QUHmBIweDYKRZ3w=\");\n\n_c = Leaflet;\nexport default Leaflet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaflet\");","map":{"version":3,"sources":["/Users/alba/Desktop/re-maps/src/Leaflet.js"],"names":["React","useState","Map","TileLayer","MarkerCluster","data","console","log","position","mapStyle","height","dataClean","venues","forEach","element","push","lng","lat","text","ListingAddress","Leaflet","markers","setMarkers","handleClick"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport MarkerCluster from \"./MarkerCluster\";\nimport data from \"./data\";\n\nconsole.log(data);\n\nconst position = [45.503, -73.595];\nconst mapStyle = { height: \"90vh\" };\n\nlet dataClean = [];\ndata.venues.forEach((element) => {\n  dataClean.push({\n    position: { lng: element.lng, lat: element.lat },\n    text: element.ListingAddress,\n  });\n});\n\nconst Leaflet = () => {\n  const [markers, setMarkers] = useState(\n    dataClean\n\n    // [\n    // data.venues.forEach(element => );\n\n    //   {\n    //   console.log(element);\n    // position: { lng: element.lng, lat: element.lat },\n    // text: element.ListingAddress,\n    //   }\n\n    // {\n    //   position: { lng: data.venues[0].lng, lat: data.venues[0].lat },\n    //   text: data.venues[0].ListingAddress,\n    // },\n    // {\n    //   position: { lng: data.venues[1].lng, lat: data.venues[1].lat },\n    //   text: data.venues[1].ListingAddress,\n    // },\n    // {\n    //   position: { lng: data.venues[2].lng, lat: data.venues[2].lat },\n    //   text: data.venues[2].ListingAddress,\n    // },\n    // {\n    //   position: { lng: data.venues[3].lng, lat: data.venues[3].lat },\n    //   text: data.venues[3].ListingAddress,\n    // },\n    //   ]\n  );\n\n  const handleClick = () => {\n    setMarkers([\n      {\n        position: { lng: data.venues[0].lng, lat: data.venues[0].lat },\n        text: data.venues[0].ListingAddress,\n      },\n      {\n        position: { lng: data.venues[1].lng, lat: data.venues[1].lat },\n        text: data.venues[1].ListingAddress,\n      },\n      {\n        position: { lng: data.venues[2].lng, lat: data.venues[2].lat },\n        text: data.venues[2].ListingAddress,\n      },\n      {\n        position: { lng: data.venues[3].lng, lat: data.venues[3].lat },\n        text: data.venues[3].ListingAddress,\n      },\n    ]);\n  };\n\n  return (\n    <>\n      <Map center={position} zoom={2} style={mapStyle} maxZoom={20}>\n        <TileLayer\n          url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <MarkerCluster markers={markers} />\n      </Map>\n      <button onClick={handleClick}>Change cluster</button>\n    </>\n  );\n};\n\nexport default Leaflet;\n"]},"metadata":{},"sourceType":"module"}