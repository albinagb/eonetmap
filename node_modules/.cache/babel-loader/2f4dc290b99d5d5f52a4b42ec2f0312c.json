{"ast":null,"code":"import _slicedToArray from\"/Users/alba/Documents/GitHub/pricemap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Map,TileLayer}from\"react-leaflet\";import Filters from\"./Filters\";import MarkerCluster from\"./MarkerCluster\";import{customMarker}from\"./constants\";import{RedMarker}from\"./RedMarker\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var position=[45.503,-73.595];var mapStyle={height:\"90vh\"};function NewDataArray(data){var dataClean=[];data.forEach(function(element){if(element.status===\"Available\"){dataClean.push({position:{lng:element.Longitude,lat:element.Latitude},text:PriceData(element),style:customMarker});}else if(element.status===\"Removed\"){dataClean.push({position:{lng:element.Longitude,lat:element.Latitude},text:PriceData(element),style:RedMarker});}});return dataClean;}function PriceData(element){var labelText=\"No.: \".concat(element.MlsNumber,\", \").concat(element.Bedrooms,\" rooms, \").concat(element.Parking,\" parking</br>\\n  \").concat(element.ListingAddress,\"</br></br>\");var data=element.history;data[0].forEach(function(element,indx){labelText=\"\".concat(labelText,\" \\u2219 \").concat(element,\": \").concat(data[1][indx],\" </br>\");});labelText=\"\".concat(labelText,\"</br>\").concat(element.weeks_on_market,\" weeks on market</br>status as of \").concat(element.updated,\": \").concat(element.status);return labelText;}var MainMap=function MainMap(_ref){var _ref$data=_ref.data,data=_ref$data===void 0?[]:_ref$data;var dataClean=NewDataArray(data);var _useState=useState(dataClean),_useState2=_slicedToArray(_useState,2),markers=_useState2[0],setMarkers=_useState2[1];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Map,{className:\"map\",center:position,zoom:2,style:mapStyle,maxZoom:18,children:[/*#__PURE__*/_jsx(Filters,{data:data,setMarkers:setMarkers,PriceData:PriceData,markers:markers}),/*#__PURE__*/_jsx(TileLayer,{className:\"test\",url:\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"}),/*#__PURE__*/_jsx(MarkerCluster,{markers:markers})]})});};export default MainMap;","map":{"version":3,"sources":["/Users/alba/Documents/GitHub/pricemap/src/MainMap.js"],"names":["React","useState","Map","TileLayer","Filters","MarkerCluster","customMarker","RedMarker","position","mapStyle","height","NewDataArray","data","dataClean","forEach","element","status","push","lng","Longitude","lat","Latitude","text","PriceData","style","labelText","MlsNumber","Bedrooms","Parking","ListingAddress","history","indx","weeks_on_market","updated","MainMap","markers","setMarkers"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport Filters from \"./Filters\";\nimport MarkerCluster from \"./MarkerCluster\";\n\nimport { customMarker } from \"./constants\";\nimport { RedMarker } from \"./RedMarker\";\n\nconst position = [45.503, -73.595];\nconst mapStyle = { height: \"90vh\" };\n\nfunction NewDataArray(data) {\n  let dataClean = [];\n  data.forEach((element) => {\n    if (element.status === \"Available\") {\n      dataClean.push({\n        position: { lng: element.Longitude, lat: element.Latitude },\n        text: PriceData(element),\n        style: customMarker,\n      });\n    } else if (element.status === \"Removed\") {\n      dataClean.push({\n        position: { lng: element.Longitude, lat: element.Latitude },\n        text: PriceData(element),\n        style: RedMarker,\n      });\n    }\n  });\n  return dataClean;\n}\n\nfunction PriceData(element) {\n  let labelText = `No.: ${element.MlsNumber}, ${element.Bedrooms} rooms, ${element.Parking} parking</br>\n  ${element.ListingAddress}</br></br>`;\n  const data = element.history;\n  data[0].forEach((element, indx) => {\n    labelText = `${labelText} âˆ™ ${element}: ${data[1][indx]} </br>`;\n  });\n\n  labelText = `${labelText}</br>${element.weeks_on_market} weeks on market</br>status as of ${element.updated}: ${element.status}`;\n\n  return labelText;\n}\n\nconst MainMap = ({ data = [] }) => {\n  let dataClean = NewDataArray(data);\n  const [markers, setMarkers] = useState(dataClean);\n  return (\n    <>\n      <Map\n        className=\"map\"\n        center={position}\n        zoom={2}\n        style={mapStyle}\n        maxZoom={18}\n      >\n        <Filters\n          data={data}\n          setMarkers={setMarkers}\n          PriceData={PriceData}\n          markers={markers}\n        />\n        <TileLayer\n          className=\"test\"\n          url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <MarkerCluster markers={markers} />\n      </Map>\n    </>\n  );\n};\n\nexport default MainMap;\n\n"]},"metadata":{},"sourceType":"module"}