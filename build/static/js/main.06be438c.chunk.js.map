{"version":3,"sources":["constants.js","MarkerCluster.js","MainMap.js","index.js"],"names":["customMarker","L","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","mcg","markerClusterGroup","MarkerCluster","markers","map","useLeaflet","useEffect","clearLayers","forEach","position","text","marker","LatLng","lat","lng","icon","addTo","bindPopup","addLayer","propTypes","PropTypes","arrayOf","shape","objectOf","number","isRequired","string","mapStyle","height","dataClean","data","element","push","Longitude","Latitude","PostalCode","MainMap","useState","setMarkers","Map","center","zoom","style","maxZoom","TileLayer","url","attribution","onClick","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4rpgwBAEaA,EAAe,IAAIC,IAAEC,KAAK,CACrCC,QAAS,8DACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,MCGdC,EAAMN,IAAEO,qBAERC,EAAgB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACfC,EAAQC,cAARD,IAkBR,OAhBAE,qBAAU,WACRN,EAAIO,cACJJ,EAAQK,SAAQ,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACdhB,IAAEiB,OAAO,IAAIjB,IAAEkB,OAAOH,EAASI,IAAKJ,EAASK,KAAM,CACjDC,KAAMtB,IAELuB,MAAMhB,GACNiB,UAAUP,MAMfN,EAAIc,SAASlB,KACZ,CAACG,EAASC,IAEN,MAGTF,EAAciB,UAAY,CACxBhB,QAASiB,IAAUC,QACjBD,IAAUE,MAAM,CACdb,SAAUW,IAAUG,SAASH,IAAUI,QAAQC,WAC/Cf,KAAMU,IAAUM,OAAOD,aACtBA,YACHA,YAGWvB,Q,eCnCTO,EAAW,CAAC,QAAS,QACrBkB,EAAW,CAAEC,OAAQ,QAEvBC,EAAY,GAEhBC,EAAKtB,SAAQ,SAACuB,GACZF,EAAUG,KAAK,CACbvB,SAAU,CAAEK,IAAKiB,EAAQE,UAAWpB,IAAKkB,EAAQG,UACjDxB,KAAMqB,EAAQI,gBAIlB,IAqBeC,EArBC,WAAO,IAAD,EACUC,mBAASR,GADnB,mBACb1B,EADa,KACJmC,EADI,KAOpB,OACE,qCACE,eAACC,EAAA,EAAD,CAAKC,OAAQ/B,EAAUgC,KAAM,EAAGC,MAAOf,EAAUgB,QAAS,GAA1D,UACE,cAACC,EAAA,EAAD,CACEC,IAAI,0CACJC,YAAY,2EAEd,cAAC,EAAD,CAAe3C,QAASA,OAE1B,wBAAQ4C,QAbQ,WAClBT,EAAWT,IAYT,gCC5BAmB,EAAM,kBAAM,cAAC,EAAD,KAEZC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.06be438c.chunk.js","sourcesContent":["import L from \"leaflet\";\n\nexport const customMarker = new L.Icon({\n  iconUrl: \"https://unpkg.com/leaflet@1.5.1/dist/images/marker-icon.png\",\n  iconSize: [25, 41],\n  iconAnchor: [10, 41],\n  popupAnchor: [2, -40],\n});\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport L from \"leaflet\";\nimport \"leaflet.markercluster/dist/leaflet.markercluster\";\nimport \"leaflet.markercluster/dist/MarkerCluster.css\";\nimport \"leaflet.markercluster/dist/MarkerCluster.Default.css\";\nimport { useLeaflet } from \"react-leaflet\";\nimport { customMarker } from \"./constants\";\n\nconst mcg = L.markerClusterGroup();\n\nconst MarkerCluster = ({ markers }) => {\n  const { map } = useLeaflet();\n\n  useEffect(() => {\n    mcg.clearLayers();\n    markers.forEach(({ position, text }) =>\n      L.marker(new L.LatLng(position.lat, position.lng), {\n        icon: customMarker,\n      })\n        .addTo(mcg)\n        .bindPopup(text)\n    );\n\n    // optionally center the map around the markers\n    // map.fitBounds(mcg.getBounds());\n    // // add the marker cluster group to the map\n    map.addLayer(mcg);\n  }, [markers, map]);\n\n  return null;\n};\n\nMarkerCluster.propTypes = {\n  markers: PropTypes.arrayOf(\n    PropTypes.shape({\n      position: PropTypes.objectOf(PropTypes.number).isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MarkerCluster;\n","import React, { useState } from \"react\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport MarkerCluster from \"./MarkerCluster\";\nimport data from \"./data\";\n\n// console.log(data);\n\nconst position = [45.503, -73.595];\nconst mapStyle = { height: \"90vh\" };\n\nlet dataClean = [];\n\ndata.forEach((element) => {\n  dataClean.push({\n    position: { lng: element.Longitude, lat: element.Latitude },\n    text: element.PostalCode,\n  });\n});\n\nconst MainMap = () => {\n  const [markers, setMarkers] = useState(dataClean);\n\n  const handleClick = () => {\n    setMarkers(dataClean);\n  };\n\n  return (\n    <>\n      <Map center={position} zoom={2} style={mapStyle} maxZoom={20}>\n        <TileLayer\n          url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <MarkerCluster markers={markers} />\n      </Map>\n      <button onClick={handleClick}>Change cluster</button>\n    </>\n  );\n};\n\nexport default MainMap;\n\n// [\n\n// {\n//   position: { lng: data.venues[0].lng, lat: data.venues[0].lat },\n//   text: data.venues[0].ListingAddress,\n// },\n// {\n//   position: { lng: data.venues[1].lng, lat: data.venues[1].lat },\n//   text: data.venues[1].ListingAddress,\n// },\n// {\n//   position: { lng: data.venues[2].lng, lat: data.venues[2].lat },\n//   text: data.venues[2].ListingAddress,\n// },\n// {\n//   position: { lng: data.venues[3].lng, lat: data.venues[3].lat },\n//   text: data.venues[3].ListingAddress,\n// },\n//   ]\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport \"./styles.css\";\nimport MainMap from \"./MainMap\";\n\nconst App = () => <MainMap />;\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}